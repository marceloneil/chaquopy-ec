apply plugin: 'com.android.application'
apply plugin: 'com.chaquo.python'  // Must come after com.android.application

def ELECTRON_CASH_ROOT = "../../electrum"

android {
    compileSdkVersion 26

    // Android Gradle plugin version 3.0 no longer requires this directive, but if it is
    // used then it will be ignored unless it specifies a compatible version. Older versions
    // of the plugin do require this directive, and seem to work fine with this version.
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26

        versionName "3.2.0"
        def verParsed = versionName.split(/\./).collect { Integer.parseInt(it) }
        versionCode ((verParsed[0] * 1000000) + (verParsed[1] * 1000) + (verParsed[2] * 10) + 1)

        python {
            // If Chaquopy fails to find Python on your build machine, enable and edit the
            // following line to point to a Python 2.7 or 3.3+ executable.
            // buildPython "C:/Python27/python.exe"

            pip {
                install "-r", "$ELECTRON_CASH_ROOT/contrib/deterministic-build/requirements.txt"
            }
            extractPackages "lib", "electroncash"
            extractPackages "plugins", "electroncash_plugins"
            extractPackages "gui", "electroncash_gui"
        }
        ndk {
            abiFilters "x86", "armeabi-v7a"
        }

        // Chaquopy generates extra internal-use constructors on static proxy classes.
        lintOptions {
            disable "ValidFragment"
        }

        // Remove other languages imported from Android support libraries.
        resConfigs "en"
    }

    flavorDimensions "pyVersion"
    productFlavors {
        // Using words rather than numbers so that "three" comes first alphabetically and is
        // therefore the default (https://issuetracker.google.com/issues/36988145).
        three {
            dimension "pyVersion"
            applicationId "com.chaquo.ec_test"
            python { version "3.6.5" }
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "demo-${variant.versionName}-${variant.name}.apk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            python {
                srcDir ELECTRON_CASH_ROOT
                include "lib/**", "gui/**", "plugins/**"  // Electron cash repository.
                include "chaquopy/**"  // This repository.
            }
        }
    }
}

dependencies {
    // Using "compile" to maintain compatibility with Android Studio 2.3. When targeting versions
    // 3.0 or later, this should be changed to "implementation".
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "android.arch.lifecycle:extensions:1.1.0"
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:preference-v14:26.1.0'
    compile 'junit:junit:4.12'
    testCompile 'junit:junit:4.12'
}
